{"version":3,"file":"static/js/835.9f14c503.chunk.js","mappings":"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","sources":["components/BackLink/Backlink.styled.js","components/BackLink/BackLink.jsx","redux/selectors.js","components/FollowButton/FollowButton.styled.js","components/FollowButton/FollowButton.jsx","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.jsx","components/LoadMoreButton/LoadMoreButton.styled.js","components/LoadMoreButton/LoadMoreButton.jsx","components/UserList/UserList.styled.js","components/UserList/UserList.jsx","pages/tweets.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\nposition: fixed;\nz-index: 999;\nright: 10px;\nmargin-top: 118px;\nmargin-bottom: 10px;\n/* margin-left: auto; */\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\npadding-left: 5px;\npadding-right: 5px;\n/* width: 196px; */\nbackground: #5736A3;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\ncursor: pointer;\n:hover,\n:focus {\n    background: #5CD3A8;\n    color: rgba(55, 55, 55, 1);\n  }\n`\n\nexport const LinkStyled = styled(Link)`\ntext-decoration: none;\ncolor: #EBD8FF;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\npadding: 16px 0px;\n:hover,\n:focus {\n    color: rgba(55, 55, 55, 1);\n  }\n`","import { HiChevronDoubleLeft } from \"react-icons/hi\";\nimport PropTypes from 'prop-types';\nimport { Wrapper } from \"./Backlink.styled\";\nimport { LinkStyled } from './Backlink.styled';\n\nexport const BackLink = ({ to }) => { \n  return (\n    <Wrapper>\n    <LinkStyled to={to}>\n      <HiChevronDoubleLeft size=\"22\" />\n      <span>Back</span>\n      </LinkStyled> \n      </Wrapper>\n  );\n};\n\nBackLink.propTypes = {\n    to: PropTypes.string.isRequired,\n};","export const selectUsers = state => state.users.items;\n\nexport const selectIsLoading = state => state.users.isLoading;\n\nexport const selectError = state => state.users.error;\n\nexport const selectFollow = state => state.users.following;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: rgba(55, 55, 55, 1);\nwidth: 196px;\nheight: 50px;\nbackground: #EBD8FF;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\n&.following{\n    background: #5CD3A8;\n}\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { selectFollow } from \"redux/selectors\";\nimport { followUser, unfollowUser } from \"redux/operations\";\nimport { Button } from \"./FollowButton.styled\";\n\n\nexport const FollowButton = ({ userData }) => {\n  const dispatch = useDispatch();\n  const following = useSelector(selectFollow);\n  const { id } = userData;\n  const isFollowing = following.find(user => user.id === id);\n    \n  const handleFollow = (userId) => {\n    if (!isFollowing) {\n      dispatch(followUser(userId));\n    } else {\n      dispatch(unfollowUser(id));\n    }\n  };\n    \n  return (\n    <Button\n      type=\"button\"\n      className={isFollowing && 'following'}\n      onClick={\n        () => handleFollow(id)\n      }>{isFollowing ? 'following' : 'follow'}\n    </Button>\n  )\n};\n\nFollowButton.propTypes = {\n  userData: PropTypes.shape({\n    user: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  })\n};\n  ","import styled from 'styled-components';\n\nconst Card = styled.div`\nposition: relative;\nwidth: 380px;\nheight: 460px;\npadding-bottom: 36px;\nbackground: linear-gradient(\n    114.99deg, \n    #471CA9 -0.99%, \n    #5736A3 55.34%, \n    #4B2A99 78.99%\n    );\nbox-shadow: -2.5776965618133545px 6.873857021331787px 20.621572494506836px 0px rgba(0, 0, 0, 0.23);\nborder-radius: 20px;\n`\n\nconst LogoWrapper = styled.div`\npadding: 20px;\n`\n\nconst BgImage = styled.img`\nmargin-bottom: 18px;\n`\n\nconst ContentWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n&::before {\n    content: '';\n    width: 380px;\n    height: 8px;\n    background: #EBD8FF;;\n    box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n      inset 0px -1.71846px 3.43693px #ae7be3,\n      inset 0px 3.43693px 2.5777px #fbf8ff;\n  }\n`\n\nconst ImgBorder = styled.img`\nposition: absolute;\nleft: 150px;\ntop: 210px;\n`\n\nconst Avatar = styled.img`\nwidth: 63px;\nborder-radius: 50%;\nmargin-bottom: 26px;\nposition: absolute;\nleft: 164px;\ntop: 219px;\n`\n\nconst InfoList = styled.ul`\ntext-align: center;\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\ncolor: #EBD8FF;\nmargin-bottom: 10px;\nmargin-top: 62px;\n`\n\nconst ListItem = styled.li`\nmargin-bottom: 16px;\n`\n\n\nexport const styles = {\n    Card,\n    LogoWrapper,\n    ImgBorder,\n    BgImage,\n    ContentWrapper,\n    Avatar,\n    InfoList,\n    ListItem,\n};","import { useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { selectFollow } from \"redux/selectors\";\nimport { FollowButton } from \"components/FollowButton/FollowButton\";\nimport { styles } from \"./UserCard.styled\";\nimport Logo from \"images/logo.png\";\nimport BGImage from \"images/tweetsBg.png\";\nimport Ellipse from \"images/ellipse.png\";\n\nconst { Card, ContentWrapper, BgImage, Avatar, InfoList, ListItem, LogoWrapper, ImgBorder } = styles;\n\nexport const UserCard = ({ userData }) => {\n    // const isLoading = useSelector(selectIsLoading);\n    const { tweets, avatar, id, followers } = userData;\n    const following = useSelector(selectFollow);\n    const isFollowing = following.find(user => user.id === id);\n\n    const visibleFollowers = isFollowing ? isFollowing.followers.toLocaleString('en-US') : followers.toLocaleString('en-US');\n\n    return (\n        <Card id={id}>\n            <LogoWrapper>\n                <img src={Logo} alt=\"logo of the company GoIT\" />\n            </LogoWrapper>\n            \n            <BgImage src={BGImage} alt=\"two chats\" />\n            <ContentWrapper>\n                <ImgBorder src={Ellipse} alt=\"ellipse\" />\n                <Avatar src={avatar} alt=\"avatar\" />\n                <InfoList>\n                    <ListItem>{tweets} tweets</ListItem>\n                    <ListItem>{visibleFollowers} followers</ListItem>\n                </InfoList>\n                <FollowButton userData={userData} />\n            </ContentWrapper>\n        </Card>\n    )\n};\n\nUserCard.propTypes = {\n  userData: PropTypes.shape({\n    user: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  })\n};","import styled from 'styled-components';\n\nexport const Button = styled.button`\nfont-family: 'Montserrat';\nfont-style: normal;\nfont-weight: 600;\nfont-size: 18px;\nline-height: 22px;\ntext-transform: uppercase;\ncolor: #EBD8FF;\nwidth: 196px;\nheight: 50px;\nbackground: #5736A3;\nbox-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\nborder-radius: 10.3108px;\nmargin-left: auto;\nmargin-right: auto;\nmargin-bottom: 10px;\n:hover,\n:focus {\n    background: #5CD3A8;\n    color: rgba(55, 55, 55, 1);\n}\n`","import { Button } from \"./LoadMoreButton.styled\";\nimport PropTypes from 'prop-types';\n\nexport const LoadMoreButton = ({ onClick }) => {\n    return (\n    <Button type=\"button\" onClick={onClick}>\n      Load more\n    </Button>\n  );\n};\n\nLoadMoreButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  margin-bottom: 35px;\n`;\n\nexport const Wrapper = styled.div`\nmargin-top: 100px;\npadding: 16px;\n`;\n\nexport const NoTweets = styled.p`\ntext-align: center;\ncolor: red;\n`","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"redux/operations\";\nimport { selectUsers } from \"redux/selectors\";\nimport { UserCard } from \"components/UserCard/UserCard\";\nimport { LoadMoreButton } from \"components/LoadMoreButton/LoadMoreButton\";\nimport { List, Wrapper, NoTweets } from \"./UserList.styled\";\n\n\nexport const UserList = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(selectUsers);\n    const [itemsToShow, setItemsToShow] = useState(3);\n\n    useEffect(() => {\n        dispatch(fetchUsers())\n    }, [dispatch]);\n    \n    const handleLoadMore = () => {\n        setItemsToShow(prevItems => prevItems + 3);\n    };\n\n    const VisibleItems = users?.slice(0, itemsToShow);\n\n    return (\n        <Wrapper>\n            <List>\n                {VisibleItems.map(user => (\n                    <UserCard\n                        key={user.id}\n                        userData={user} />\n                ))}\n            </List>\n            {VisibleItems.length !== users.length && <LoadMoreButton onClick={handleLoadMore} />}\n            {VisibleItems.length === users.length && <NoTweets>No more tweets to load</NoTweets>}\n        </Wrapper>\n    )\n};","import { BackLink } from \"components/BackLink/BackLink\";\nimport { useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { UserList } from \"components/UserList/UserList\";\n\n\nexport default function Tweets() {\n    const location = useLocation();\n    const backLinkLocationRef = useRef(location.state?.from ?? \"/\");\n\n    return (\n        <div style={{padding: '20px'}}>\n            <BackLink to={backLinkLocationRef.current}/>\n            <UserList />\n        </div>\n    );\n};"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","LinkStyled","Link","_templateObject2","BackLink","_ref","to","_jsx","children","_jsxs","HiChevronDoubleLeft","size","selectUsers","state","users","items","selectFollow","following","Button","FollowButton","userData","dispatch","useDispatch","useSelector","id","isFollowing","find","user","type","className","onClick","userId","unfollowUser","followUser","Card","LogoWrapper","BgImage","_templateObject3","ContentWrapper","_templateObject4","styles","ImgBorder","_templateObject5","Avatar","_templateObject6","InfoList","_templateObject7","ListItem","_templateObject8","UserCard","tweets","avatar","followers","visibleFollowers","toLocaleString","src","alt","LoadMoreButton","List","NoTweets","UserList","_useState","useState","_useState2","_slicedToArray","itemsToShow","setItemsToShow","useEffect","fetchUsers","VisibleItems","slice","map","length","prevItems","Tweets","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","from","style","padding","current"],"sourceRoot":""}